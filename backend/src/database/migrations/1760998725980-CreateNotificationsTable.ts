import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateNotificationsTable1760998725980 implements MigrationInterface {
    name = 'CreateNotificationsTable1760998725980'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP INDEX "public"."IDX_EMOTIONAL_PROCEDURE_NAME"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_EMOTIONAL_PERSONA"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_appointments_scheduledDate"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_appointments_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_email"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_role"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_patients_email"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_patients_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROTOCOLS_PROCEDURE_NAME"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROTOCOLS_TYPE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROCEDURES_CATEGORY"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROCEDURES_BODY_AREA"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_PROCEDURES_NAME"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ALERTS_PROCEDURE_NAME"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ALERTS_SEVERITY"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ALERTS_PROCEDURE_SEVERITY"`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_type_enum" AS ENUM('info', 'warning', 'error', 'success')`);
        await queryRunner.query(`CREATE TABLE "notifications" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" uuid NOT NULL, "title" character varying(255) NOT NULL, "message" text NOT NULL, "type" "public"."notifications_type_enum" NOT NULL DEFAULT 'info', "read" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_6a72c3c0f683f6462415e653c3a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" DROP CONSTRAINT "UQ_8b4ebda32210f8140763b8599a9"`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" DROP COLUMN "procedure_name"`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ADD "procedure_name" character varying NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."motivations" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."expectations" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."happiness_triggers" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."real_quotes" IS NULL`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" DROP COLUMN "motivational_persona"`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ADD "motivational_persona" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "appointments" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."appointments_status_enum" AS ENUM('scheduled', 'confirmed', 'in_progress', 'completed', 'cancelled', 'no_show')`);
        await queryRunner.query(`ALTER TABLE "appointments" ADD "status" "public"."appointments_status_enum" NOT NULL DEFAULT 'scheduled'`);
        await queryRunner.query(`ALTER TABLE "appointments" DROP COLUMN "type"`);
        await queryRunner.query(`CREATE TYPE "public"."appointments_type_enum" AS ENUM('consultation', 'follow_up', 'procedure', 'emergency')`);
        await queryRunner.query(`ALTER TABLE "appointments" ADD "type" "public"."appointments_type_enum" NOT NULL DEFAULT 'consultation'`);
        await queryRunner.query(`ALTER TABLE "appointments" ALTER COLUMN "createdAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "appointments" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "users_email_key"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "phone"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "phone" character varying`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "role"`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('admin', 'doctor', 'nurse', 'staff')`);
        await queryRunner.query(`ALTER TABLE "users" ADD "role" "public"."users_role_enum" NOT NULL DEFAULT 'staff'`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "isActive" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "mfaSecret"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "mfaSecret" character varying`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "mfaEnabled" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "createdAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP CONSTRAINT "patients_email_key"`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "email" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" ADD CONSTRAINT "UQ_64e2031265399f5690b0beba6a5" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "phone"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "phone" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "cpf"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "cpf" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "address"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "address" character varying`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."patients_status_enum" AS ENUM('active', 'inactive', 'discharged')`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "status" "public"."patients_status_enum" NOT NULL DEFAULT 'active'`);
        await queryRunner.query(`ALTER TABLE "patients" ALTER COLUMN "createdAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "protocols" DROP COLUMN "procedure_name"`);
        await queryRunner.query(`ALTER TABLE "protocols" ADD "procedure_name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "protocols" DROP COLUMN "type"`);
        await queryRunner.query(`ALTER TABLE "protocols" ADD "type" character varying NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "protocols"."protocol_data" IS NULL`);
        await queryRunner.query(`ALTER TABLE "protocols" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "protocols" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`COMMENT ON COLUMN "procedures"."position" IS NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP CONSTRAINT "UQ_81aed255688030b862c218124b4"`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD CONSTRAINT "UQ_81aed255688030b862c218124b4" UNIQUE ("name")`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "category"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "category" character varying NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "procedures"."volume_2024" IS NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "market_share"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "market_share" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "body_area"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "body_area" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "procedures" ALTER COLUMN "updated_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "alerts" DROP COLUMN "procedure_name"`);
        await queryRunner.query(`ALTER TABLE "alerts" ADD "procedure_name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "alerts" DROP COLUMN "severity"`);
        await queryRunner.query(`ALTER TABLE "alerts" ADD "severity" character varying NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "alerts"."alert_sign_ptbr" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "alerts"."recommended_action_ptbr" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "alerts"."source_refs" IS NULL`);
        await queryRunner.query(`ALTER TABLE "alerts" DROP COLUMN "last_reviewed"`);
        await queryRunner.query(`ALTER TABLE "alerts" ADD "last_reviewed" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "alerts" ALTER COLUMN "created_at" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "appointments" ADD CONSTRAINT "FK_3330f054416745deaa2cc130700" FOREIGN KEY ("patient_id") REFERENCES "patients"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "appointments" ADD CONSTRAINT "FK_4cf26c3f972d014df5c68d503d2" FOREIGN KEY ("doctor_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "patients" ADD CONSTRAINT "FK_1ed64193776a964865ce1530e65" FOREIGN KEY ("assigned_doctor_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_9a8a82462cab47c73d25f49261f" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_9a8a82462cab47c73d25f49261f"`);
        await queryRunner.query(`ALTER TABLE "patients" DROP CONSTRAINT "FK_1ed64193776a964865ce1530e65"`);
        await queryRunner.query(`ALTER TABLE "appointments" DROP CONSTRAINT "FK_4cf26c3f972d014df5c68d503d2"`);
        await queryRunner.query(`ALTER TABLE "appointments" DROP CONSTRAINT "FK_3330f054416745deaa2cc130700"`);
        await queryRunner.query(`ALTER TABLE "alerts" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "alerts" DROP COLUMN "last_reviewed"`);
        await queryRunner.query(`ALTER TABLE "alerts" ADD "last_reviewed" character varying(20) NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "alerts"."source_refs" IS 'Referências das fontes médicas'`);
        await queryRunner.query(`COMMENT ON COLUMN "alerts"."recommended_action_ptbr" IS 'Ação recomendada em português brasileiro'`);
        await queryRunner.query(`COMMENT ON COLUMN "alerts"."alert_sign_ptbr" IS 'Sinal de alerta em português brasileiro'`);
        await queryRunner.query(`ALTER TABLE "alerts" DROP COLUMN "severity"`);
        await queryRunner.query(`ALTER TABLE "alerts" ADD "severity" character varying(20) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "alerts" DROP COLUMN "procedure_name"`);
        await queryRunner.query(`ALTER TABLE "alerts" ADD "procedure_name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "procedures" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "body_area"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "body_area" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "market_share"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "market_share" character varying(20) NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "procedures"."volume_2024" IS 'Volume de procedimentos realizados em 2024'`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "category"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "category" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP CONSTRAINT "UQ_81aed255688030b862c218124b4"`);
        await queryRunner.query(`ALTER TABLE "procedures" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "procedures" ADD CONSTRAINT "UQ_81aed255688030b862c218124b4" UNIQUE ("name")`);
        await queryRunner.query(`COMMENT ON COLUMN "procedures"."position" IS 'Posição no ranking de procedimentos mais realizados'`);
        await queryRunner.query(`ALTER TABLE "protocols" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "protocols" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`COMMENT ON COLUMN "protocols"."protocol_data" IS 'Dados do protocolo em formato JSON (timeline, instruções)'`);
        await queryRunner.query(`ALTER TABLE "protocols" DROP COLUMN "type"`);
        await queryRunner.query(`ALTER TABLE "protocols" ADD "type" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "protocols" DROP COLUMN "procedure_name"`);
        await queryRunner.query(`ALTER TABLE "protocols" ADD "procedure_name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" ALTER COLUMN "createdAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."patients_status_enum"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "status" character varying(50) DEFAULT 'active'`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "address"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "address" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "cpf"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "cpf" character varying(14) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "phone"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "phone" character varying(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" DROP CONSTRAINT "UQ_64e2031265399f5690b0beba6a5"`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "email" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "patients" ADD CONSTRAINT "patients_email_key" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "patients" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "patients" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "createdAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "mfaEnabled" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "mfaSecret"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "mfaSecret" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "isActive" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "role"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "role" character varying(50) DEFAULT 'staff'`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "phone"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "phone" character varying(50)`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "users_email_key" UNIQUE ("email")`);
        await queryRunner.query(`ALTER TABLE "appointments" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "appointments" ALTER COLUMN "createdAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "appointments" DROP COLUMN "type"`);
        await queryRunner.query(`DROP TYPE "public"."appointments_type_enum"`);
        await queryRunner.query(`ALTER TABLE "appointments" ADD "type" character varying(50) DEFAULT 'consultation'`);
        await queryRunner.query(`ALTER TABLE "appointments" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."appointments_status_enum"`);
        await queryRunner.query(`ALTER TABLE "appointments" ADD "status" character varying(50) DEFAULT 'scheduled'`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" DROP COLUMN "motivational_persona"`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ADD "motivational_persona" text NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."real_quotes" IS 'Frases reais de pacientes'`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."happiness_triggers" IS 'Gatilhos de felicidade dos pacientes'`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."expectations" IS 'O que os pacientes buscam'`);
        await queryRunner.query(`COMMENT ON COLUMN "emotional_mappings"."motivations" IS 'Motivações principais dos pacientes'`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" DROP COLUMN "procedure_name"`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ADD "procedure_name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "emotional_mappings" ADD CONSTRAINT "UQ_8b4ebda32210f8140763b8599a9" UNIQUE ("procedure_name")`);
        await queryRunner.query(`DROP TABLE "notifications"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_type_enum"`);
        await queryRunner.query(`CREATE INDEX "IDX_ALERTS_PROCEDURE_SEVERITY" ON "alerts" ("procedure_name", "severity") `);
        await queryRunner.query(`CREATE INDEX "IDX_ALERTS_SEVERITY" ON "alerts" ("severity") `);
        await queryRunner.query(`CREATE INDEX "IDX_ALERTS_PROCEDURE_NAME" ON "alerts" ("procedure_name") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROCEDURES_NAME" ON "procedures" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROCEDURES_BODY_AREA" ON "procedures" ("body_area") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROCEDURES_CATEGORY" ON "procedures" ("category") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROTOCOLS_TYPE" ON "protocols" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_PROTOCOLS_PROCEDURE_NAME" ON "protocols" ("procedure_name") `);
        await queryRunner.query(`CREATE INDEX "IDX_patients_status" ON "patients" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_patients_email" ON "patients" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_role" ON "users" ("role") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_email" ON "users" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_appointments_status" ON "appointments" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_appointments_scheduledDate" ON "appointments" ("scheduledDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_EMOTIONAL_PERSONA" ON "emotional_mappings" ("motivational_persona") `);
        await queryRunner.query(`CREATE INDEX "IDX_EMOTIONAL_PROCEDURE_NAME" ON "emotional_mappings" ("procedure_name") `);
    }

}
